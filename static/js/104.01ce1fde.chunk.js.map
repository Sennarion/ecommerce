{"version":3,"file":"static/js/104.01ce1fde.chunk.js","mappings":"0TAiBe,SAASA,IACtB,OAA8BC,EAAAA,EAAAA,UAAS,MAAvC,eAAOC,EAAP,KAAgBC,EAAhB,KAEMC,GAAYC,EAAAA,EAAAA,KAAY,SAAAC,GAAK,OAAIA,EAAMC,KAAKC,KAAf,IAE7BC,GAAWC,EAAAA,EAAAA,MAETC,GAAcC,EAAAA,EAAAA,MAAdD,UAEFE,GAASC,EAAAA,EAAAA,IAAIC,EAAAA,GAAI,WAAYJ,GAQnC,IANAK,EAAAA,EAAAA,YAAU,YACRC,EAAAA,EAAAA,IAAOJ,GACJK,MAAK,SAAAhB,GAAO,OAAIC,EAAWD,EAAQiB,OAAvB,IACZC,OAAM,SAAAC,GAAG,OAAIC,MAAMD,EAAV,GACb,GAAE,CAACR,KAECX,EAAS,OAAO,KAErB,IACEqB,EAUErB,EAVFqB,GACAC,EASEtB,EATFsB,KACAC,EAQEvB,EARFuB,OACAC,EAOExB,EAPFwB,SACAC,EAMEzB,EANFyB,MACAC,EAKE1B,EALF0B,cACAC,EAIE3B,EAJF2B,YACAC,EAGE5B,EAHF4B,YACAC,EAEE7B,EAFF6B,SACAC,EACE9B,EADF8B,OAGIC,EAAW7B,EAAU8B,MAAK,SAAAhC,GAAO,OAAIA,EAAQqB,KAAOA,CAAnB,IACjCY,EAAeP,GAAiBD,EAEtC,OACE,SAAC,IAAD,WACE,UAAC,IAAD,CAAOS,QAAS,EAAGC,UAAW,CAAEC,GAAI,SAAUC,GAAI,OAAlD,WACE,SAAC,IAAD,CAAKC,aAAc,GAAIC,SAAS,SAASC,UAAW,EAApD,UACE,gBAAKC,IAAKZ,EAAUa,IAAKpB,EAAMqB,MAAM,WAEvC,UAAC,IAAD,YACE,SAAC,IAAD,CAAYC,QAAQ,KAAKC,GAAI,EAAGC,MAAM,UAAtC,SACGxB,KAEH,SAAC,IAAD,CAAYuB,GAAI,EAAhB,SAAoBjB,KACpB,SAAC,IAAD,CAAQN,KAAK,YAAYyB,MAAOjB,EAAQkB,UAAW,GAAKC,UAAQ,KAChE,UAAC,IAAD,CAAYJ,GAAI,EAAGK,GAAI,EAAvB,WACE,SAAC,IAAD,CAAYN,QAAQ,KAAKO,UAAU,OAAOC,GAAI,EAA9C,0BAGCzB,EAAY0B,KAAK,UAEpB,UAAC,IAAD,CAAYR,GAAI,EAAhB,WACE,SAAC,IAAD,CAAYD,QAAQ,KAAKO,UAAU,OAAOC,GAAI,EAA9C,qBAGC7B,MAEH,UAAC,IAAD,CAAYsB,GAAI,EAAhB,WACE,SAAC,IAAD,CAAYD,QAAQ,KAAKO,UAAU,OAAOC,GAAI,EAA9C,uBAGC5B,MAEH,UAAC,IAAD,CAAOW,UAAU,MAAMmB,WAAW,SAASpB,QAAS,EAApD,WACE,UAAC,IAAD,CAAYU,QAAQ,KAAKE,MAAM,UAAUD,GAAI,EAA7C,UACGZ,EADH,YAGCP,IACC,UAAC,IAAD,CACEkB,QAAQ,KACRW,GAAI,CAAEC,eAAgB,gBACtBX,GAAI,EAHN,UAKGpB,EALH,eASHM,GACC,SAAC,IAAD,CACEa,QAAQ,WACRE,MAAM,UACNW,WAAW,SAAC,IAAD,IACXC,QAAS,kBAAMnD,GAASoD,EAAAA,EAAAA,IAActC,GAA7B,EAJX,+BASA,SAAC,IAAD,CACEuB,QAAQ,YACRE,MAAM,UACNW,WAAW,SAAC,IAAD,IACXC,QAAS,kBAAMnD,GAASqD,EAAAA,EAAAA,IAAW5D,GAA1B,EAJX,gCAaX,C","sources":["pages/ProductDetails/ProductDetails.jsx"],"sourcesContent":["import { useState, useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { useParams } from 'react-router-dom';\nimport { doc, getDoc } from 'firebase/firestore';\nimport { db } from 'firebase-config/config';\nimport { addProduct, deleteProduct } from 'redux/cart/slice';\nimport {\n  Box,\n  Container,\n  Stack,\n  Button,\n  Typography,\n  Rating,\n} from '@mui/material';\nimport AddShoppingCartRoundedIcon from '@mui/icons-material/AddShoppingCartRounded';\nimport RemoveShoppingCartRoundedIcon from '@mui/icons-material/RemoveShoppingCartRounded';\n\nexport default function ProductDetails() {\n  const [product, setProduct] = useState(null);\n\n  const cartItems = useSelector(state => state.cart.items);\n\n  const dispatch = useDispatch();\n\n  const { productId } = useParams();\n\n  const docRef = doc(db, 'products', productId);\n\n  useEffect(() => {\n    getDoc(docRef)\n      .then(product => setProduct(product.data()))\n      .catch(err => alert(err));\n  }, [docRef]);\n\n  if (!product) return null;\n\n  const {\n    id,\n    name,\n    weight,\n    diameter,\n    price,\n    discountPrice,\n    ingredients,\n    description,\n    photoUrl,\n    rating,\n  } = product;\n\n  const isInCart = cartItems.some(product => product.id === id);\n  const pricePerUnit = discountPrice || price;\n\n  return (\n    <Container>\n      <Stack spacing={4} direction={{ xs: 'column', md: 'row' }}>\n        <Box borderRadius={10} overflow=\"hidden\" boxShadow={2}>\n          <img src={photoUrl} alt={name} width=\"400\" />\n        </Box>\n        <Stack>\n          <Typography variant=\"h4\" mb={2} color=\"primary\">\n            {name}\n          </Typography>\n          <Typography mb={2}>{description}</Typography>\n          <Rating name=\"read-only\" value={rating} precision={0.5} readOnly />\n          <Typography mb={2} mt={2}>\n            <Typography variant=\"h6\" component=\"span\" mr={1}>\n              Ingredients:\n            </Typography>\n            {ingredients.join(', ')}\n          </Typography>\n          <Typography mb={2}>\n            <Typography variant=\"h6\" component=\"span\" mr={1}>\n              Weight:\n            </Typography>\n            {weight}\n          </Typography>\n          <Typography mb={2}>\n            <Typography variant=\"h6\" component=\"span\" mr={1}>\n              Diameter:\n            </Typography>\n            {diameter}\n          </Typography>\n          <Stack direction=\"row\" alignItems=\"center\" spacing={2}>\n            <Typography variant=\"h4\" color=\"primary\" mb={2}>\n              {pricePerUnit}₴\n            </Typography>\n            {discountPrice && (\n              <Typography\n                variant=\"h6\"\n                sx={{ textDecoration: 'line-through' }}\n                mb={2}\n              >\n                {price}₴\n              </Typography>\n            )}\n          </Stack>\n          {isInCart ? (\n            <Button\n              variant=\"outlined\"\n              color=\"primary\"\n              startIcon={<RemoveShoppingCartRoundedIcon />}\n              onClick={() => dispatch(deleteProduct(id))}\n            >\n              Delete from cart\n            </Button>\n          ) : (\n            <Button\n              variant=\"contained\"\n              color=\"primary\"\n              startIcon={<AddShoppingCartRoundedIcon />}\n              onClick={() => dispatch(addProduct(product))}\n            >\n              Add to cart\n            </Button>\n          )}\n        </Stack>\n      </Stack>\n    </Container>\n  );\n}\n"],"names":["ProductDetails","useState","product","setProduct","cartItems","useSelector","state","cart","items","dispatch","useDispatch","productId","useParams","docRef","doc","db","useEffect","getDoc","then","data","catch","err","alert","id","name","weight","diameter","price","discountPrice","ingredients","description","photoUrl","rating","isInCart","some","pricePerUnit","spacing","direction","xs","md","borderRadius","overflow","boxShadow","src","alt","width","variant","mb","color","value","precision","readOnly","mt","component","mr","join","alignItems","sx","textDecoration","startIcon","onClick","deleteProduct","addProduct"],"sourceRoot":""}