{"version":3,"file":"static/js/577.f8a9f971.chunk.js","mappings":"6RAce,SAASA,IACtB,OAAgDC,EAAAA,EAAAA,WAAS,GAAzD,eAAOC,EAAP,KAAyBC,EAAzB,KACA,GAA4CF,EAAAA,EAAAA,WAAS,GAArD,eAAOG,EAAP,KAAuBC,EAAvB,KAEMC,GAAWC,EAAAA,EAAAA,MAOXC,GAAYC,EAAAA,EAAAA,KAAY,SAAAC,GAAK,OAAIA,EAAMC,KAAKC,KAAf,IAE7BC,EAAaL,EAAUM,QAAO,SAACC,EAAOC,GAC1C,IAAMC,EAAeD,EAAKE,eAAiBF,EAAKG,MAChD,OAAOJ,EAAQC,EAAKI,SAAWH,CAChC,GAAE,GAEH,OACE,UAAC,IAAD,WACGT,EAAUa,OAAS,GAClB,iCACE,SAAC,KAAD,CAAUb,UAAWA,KACrB,UAAC,IAAD,CACEc,UAAW,CAAEC,GAAI,SAAUC,GAAI,OAC/BC,eAAe,gBACfC,WAAW,SACXC,QAAS,EAJX,WAME,UAAC,IAAD,CAAYC,QAAQ,KAApB,0BAAuCf,EAAvC,aACA,SAAC,IAAD,CACEe,QAAQ,YACRC,MAAM,UACNC,KAAK,QACLC,QAAS,kBAAM5B,GAAoB,EAA1B,EAJX,8BAWJ,+BACE,UAAC,IAAD,CAAOwB,QAAS,EAAGD,WAAW,SAA9B,WACE,SAAC,IAAD,CAAYE,QAAQ,KAApB,8CAGA,SAAC,IAAD,CAAQI,UAAWC,EAAAA,GAAMC,GAAG,YAAYN,QAAQ,WAAhD,kCAMN,SAAC,KAAD,CACEO,OAAQjC,EACRkC,QAAS,kBAAMjC,GAAoB,EAA1B,EACTkC,QAjDU,WACdhC,GAAkB,GAClBC,GAASgC,EAAAA,EAAAA,MACV,KAgDG,SAAC,IAAD,CACEC,KAAMnC,EACNoC,iBAAkB,IAClBJ,QAAS,kBAAM/B,GAAkB,EAAxB,EACToC,aAAc,CAAEC,SAAU,MAAOC,WAAY,SAJ/C,UAME,SAAC,IAAD,CAAOC,SAAS,OAAOR,QAAS,kBAAM/B,GAAkB,EAAxB,EAAhC,wFAMP,C","sources":["pages/Cart/Cart.jsx"],"sourcesContent":["import { useState } from 'react';\nimport { Link } from 'react-router-dom';\nimport { useDispatch, useSelector } from 'react-redux';\nimport {\n  Container,\n  Typography,\n  Button,\n  Snackbar,\n  Alert,\n  Stack,\n} from '@mui/material';\nimport { CartList, OrderModal } from 'components';\nimport { cleanCart } from 'redux/cart/slice';\n\nexport default function Cart() {\n  const [isOrderModalOpen, setIsOrderModalOpen] = useState(false);\n  const [isSuccessOrder, setIsSuccessOrder] = useState(false);\n\n  const dispatch = useDispatch();\n\n  const onOrder = () => {\n    setIsSuccessOrder(true);\n    dispatch(cleanCart());\n  };\n\n  const cartItems = useSelector(state => state.cart.items);\n\n  const totalPrice = cartItems.reduce((total, item) => {\n    const pricePerUnit = item.discountPrice || item.price;\n    return total + item.quantity * pricePerUnit;\n  }, 0);\n\n  return (\n    <Container>\n      {cartItems.length > 0 ? (\n        <>\n          <CartList cartItems={cartItems} />\n          <Stack\n            direction={{ xs: 'column', sm: 'row' }}\n            justifyContent=\"space-between\"\n            alignItems=\"center\"\n            spacing={3}\n          >\n            <Typography variant=\"h4\">Total price: {totalPrice}â‚´</Typography>\n            <Button\n              variant=\"contained\"\n              color=\"primary\"\n              size=\"large\"\n              onClick={() => setIsOrderModalOpen(true)}\n            >\n              Order now\n            </Button>\n          </Stack>\n        </>\n      ) : (\n        <>\n          <Stack spacing={3} alignItems=\"center\">\n            <Typography variant=\"h5\">\n              Your cart is currently empty :(\n            </Typography>\n            <Button component={Link} to=\"/products\" variant=\"outlined\">\n              Go to products\n            </Button>\n          </Stack>\n        </>\n      )}\n      <OrderModal\n        isOpen={isOrderModalOpen}\n        onClose={() => setIsOrderModalOpen(false)}\n        onOrder={onOrder}\n      />\n      <Snackbar\n        open={isSuccessOrder}\n        autoHideDuration={6000}\n        onClose={() => setIsSuccessOrder(false)}\n        anchorOrigin={{ vertical: 'top', horizontal: 'right' }}\n      >\n        <Alert severity=\"info\" onClose={() => setIsSuccessOrder(false)}>\n          Your order has been accepted. Please wait for a call from our manager.\n        </Alert>\n      </Snackbar>\n    </Container>\n  );\n}\n"],"names":["Cart","useState","isOrderModalOpen","setIsOrderModalOpen","isSuccessOrder","setIsSuccessOrder","dispatch","useDispatch","cartItems","useSelector","state","cart","items","totalPrice","reduce","total","item","pricePerUnit","discountPrice","price","quantity","length","direction","xs","sm","justifyContent","alignItems","spacing","variant","color","size","onClick","component","Link","to","isOpen","onClose","onOrder","cleanCart","open","autoHideDuration","anchorOrigin","vertical","horizontal","severity"],"sourceRoot":""}