{"version":3,"file":"static/js/217.e6c96a94.chunk.js","mappings":"2SAUe,SAASA,IACtB,OAAgCC,EAAAA,EAAAA,UAAS,IAAzC,eAAOC,EAAP,KAAiBC,EAAjB,KACA,GAA4CF,EAAAA,EAAAA,UAAS,IAArD,eAAOG,EAAP,KAAuBC,EAAvB,KAEMC,GAAWC,EAAAA,EAAAA,MAEjB,GAAwCC,EAAAA,EAAAA,MAAxC,eAAOC,EAAP,KAAqBC,EAArB,KAEMC,GAAWC,EAAAA,EAAAA,MAEXC,EAAcJ,EAAaK,IAAI,QAE/BC,GAAwBC,EAAAA,EAAAA,IAAWC,EAAAA,GAAI,YAmB7C,OAjBAC,EAAAA,EAAAA,YAAU,WACRP,GAASQ,EAAAA,EAAAA,KAAa,KACtBC,EAAAA,EAAAA,IAAQL,GACLM,MAAK,SAAAnB,GAAQ,OACZA,EAASoB,KAAKC,KAAI,SAAAC,GAAG,eAAOC,GAAID,EAAIC,IAAOD,EAAIE,OAA1B,GADT,IAGbL,KAAKlB,GACLwB,OAAM,SAAAC,GAAG,OAAIjB,GAASkB,EAAAA,EAAAA,IAAeD,EAAIE,SAAhC,IACTC,SAAQ,kBAAMpB,GAASQ,EAAAA,EAAAA,KAAa,GAA5B,GAEZ,GAAE,KAEHD,EAAAA,EAAAA,YAAU,WACR,IAAMc,ECnCH,SAA6B9B,EAAU+B,GAC5C,OAAQA,GACN,KAAKC,EAAAA,EAAAA,YACH,OAAO,OACFhC,EAASiC,MAAK,SAACC,EAAGC,GACnB,IAAMC,EAASF,EAAEG,eAAiBH,EAAEI,MAEpC,OADeH,EAAEE,eAAiBF,EAAEG,OACpBF,CACjB,KAGL,KAAKJ,EAAAA,EAAAA,UACH,OAAO,OACFhC,EAASiC,MAAK,SAACC,EAAGC,GAGnB,OAFeD,EAAEG,eAAiBH,EAAEI,QACrBH,EAAEE,eAAiBF,EAAEG,MAErC,KAGL,KAAKN,EAAAA,EAAAA,aACH,OAAO,OAAIhC,EAASiC,MAAK,SAACC,EAAGC,GAAJ,OAAUA,EAAEI,OAASL,EAAEK,MAAvB,KAE3B,KAAKP,EAAAA,EAAAA,WACH,OAAO,OAAIhC,EAASiC,MAAK,SAACC,EAAGC,GAAJ,OAAUD,EAAEK,OAASJ,EAAEI,MAAvB,KAE3B,QACE,OAAO,OAAIvC,GAEhB,CDM6BwC,CAAoBxC,EAAUW,GACxDR,EAAkB2B,EACnB,GAAE,CAAC9B,EAAUW,KAGZ,UAAC8B,EAAA,EAAD,YACE,SAAC,KAAD,CAAQjC,gBAAiBA,KACzB,SAAC,KAAD,CAAcR,SAAUE,EAAgBwC,MAAO,CAAEC,KAAMvC,OAG5D,C","sources":["pages/Products/Products.jsx","utils/sortProducts.js"],"sourcesContent":["import { useState, useEffect } from 'react';\nimport { useSearchParams, useLocation } from 'react-router-dom';\nimport { useDispatch } from 'react-redux';\nimport { getDocs, collection } from 'firebase/firestore';\nimport { db } from 'firebase-config/config';\nimport { Container } from '@mui/material';\nimport { setErrorStatus, setIsLoading } from 'redux/global/slice';\nimport { ProductsList, Filter } from 'components';\nimport { sortProductsByValue } from 'utils/sortProducts';\n\nexport default function Products() {\n  const [products, setProducts] = useState([]);\n  const [sortedProducts, setSortedProducts] = useState([]);\n\n  const location = useLocation();\n\n  const [searchParams, setSearchParams] = useSearchParams();\n\n  const dispatch = useDispatch();\n\n  const sortByValue = searchParams.get('sort');\n\n  const productsCollectionRef = collection(db, 'products');\n\n  useEffect(() => {\n    dispatch(setIsLoading(true));\n    getDocs(productsCollectionRef)\n      .then(products =>\n        products.docs.map(doc => ({ id: doc.id, ...doc.data() }))\n      )\n      .then(setProducts)\n      .catch(err => dispatch(setErrorStatus(err.message)))\n      .finally(() => dispatch(setIsLoading(false)));\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  useEffect(() => {\n    const newSortedProducts = sortProductsByValue(products, sortByValue);\n    setSortedProducts(newSortedProducts);\n  }, [products, sortByValue]);\n\n  return (\n    <Container>\n      <Filter setSearchParams={setSearchParams} />\n      <ProductsList products={sortedProducts} state={{ from: location }} />\n    </Container>\n  );\n}\n","import { filterParams } from 'data/filter-params';\n\nexport function sortProductsByValue(products, value) {\n  switch (value) {\n    case filterParams.byPriceDown:\n      return [\n        ...products.sort((a, b) => {\n          const priceA = a.discountPrice || a.price;\n          const priceB = b.discountPrice || b.price;\n          return priceB - priceA;\n        }),\n      ];\n\n    case filterParams.byPriceUp:\n      return [\n        ...products.sort((a, b) => {\n          const priceA = a.discountPrice || a.price;\n          const priceB = b.discountPrice || b.price;\n          return priceA - priceB;\n        }),\n      ];\n\n    case filterParams.byRatingDown:\n      return [...products.sort((a, b) => b.rating - a.rating)];\n\n    case filterParams.byRatingUp:\n      return [...products.sort((a, b) => a.rating - b.rating)];\n\n    default:\n      return [...products];\n  }\n}\n"],"names":["Products","useState","products","setProducts","sortedProducts","setSortedProducts","location","useLocation","useSearchParams","searchParams","setSearchParams","dispatch","useDispatch","sortByValue","get","productsCollectionRef","collection","db","useEffect","setIsLoading","getDocs","then","docs","map","doc","id","data","catch","err","setErrorStatus","message","finally","newSortedProducts","value","filterParams","sort","a","b","priceA","discountPrice","price","rating","sortProductsByValue","Container","state","from"],"sourceRoot":""}